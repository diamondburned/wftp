package wftp

import (
	"errors"
	"io"

	"libdb.so/cpsc-471-assignment/wftp/message"
)

// SystemMessage extends the message.Message interface to include
// system-generated messages. These messages are not sent by peers,
// but are instead generated by the current peer.
type SystemMessage interface {
	message.Message
	isSystemMessage()
}

// SystemConnectionTerminated is sent when a connection is terminated.
// Unlike message.Terminate, this message is guaranteed to be sent
// when a connection is terminated, even if the connection is terminated
// abrubtly.
type SystemConnectionTerminated struct {
	isSystemMessage
}

// SystemMessageDownloading is sent when a file is being downloaded.
// It gets emitted every once in a while to indicate progress.
type SystemMessageDownloading struct {
	// Path is the path of the file being downloaded.
	Path message.FilePath

	isSystemMessage
}

type isSystemMessage struct{}

func (*isSystemMessage) isSystemMessage()          {}
func (*isSystemMessage) Type() message.MessageType { return 0 }
func (*isSystemMessage) Encode(w io.Writer) error  { return errors.New("cannot encode system message") }
func (*isSystemMessage) Decode(r io.Reader) error  { return errors.New("cannot decode system message") }
